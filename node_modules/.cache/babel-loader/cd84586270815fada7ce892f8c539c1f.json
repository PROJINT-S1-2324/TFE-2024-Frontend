{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\dash2-v1.0.1 (1)\\\\src\\\\pages\\\\components\\\\Progress.js\";\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\nexport default (() => /*#__PURE__*/React.createElement(\"article\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"px-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  className: \"d-block mb-4 mb-md-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"h2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, \"Progress\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }\n}, \"Use progress bars to indicate percentage based components.\"))), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Example\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  }, \"<Progress>\"), \" component to show progress bars or loaders for your app. You can set the value of the bar using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 156\n    }\n  }, \"value\"), \" attribute. You can also change the appearance using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 231\n    }\n  }, \"variant=\\\"*\\\"\"), \" attributes using the default Bootstrap color classes, such as \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 318\n    }\n  }, \"primary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 340\n    }\n  }, \"secondary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 364\n    }\n  }, \"danger\"), \" and so on.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<Progress variant=\"primary\" label=\"Primary color\" value={25} />`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Color variations\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"To update the appearance of the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }, \"<Progress>\"), \" component you can use the following classes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 132\n    }\n  }, \"variant\"), \" attribute. You can also add a label text using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 204\n    }\n  }, \"label=\\\"lorem ipsum\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Sizing\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"You can also use one of the four available sizes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 71\n    }\n  }, \"<Progress>\"), \" updating the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 118\n    }\n  }, \"size=\\\"*\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}))));","map":{"version":3,"names":["React","Col","Row","Container","Documentation","Progress","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","scope","imports","example"],"sources":["C:/test/dash2-v1.0.1 (1)/src/pages/components/Progress.js"],"sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}