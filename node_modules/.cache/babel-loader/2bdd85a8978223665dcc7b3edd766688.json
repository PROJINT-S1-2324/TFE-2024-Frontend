{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\dash2-v1.0.1 (1)\\\\src\\\\components\\\\Charts.js\";\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: {\n      ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-double-octave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: {\n      ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n};\nexport const CircleChart = props => {\n  const {\n    series = [],\n    donutWidth = 20\n  } = props;\n  const sum = (a, b) => a + b;\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: {\n      series\n    },\n    options: {\n      ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n};\nexport const BarChart = props => {\n  const {\n    labels = [],\n    series = [],\n    chartClassName = \"ct-golden-section\"\n  } = props;\n  const data = {\n    labels,\n    series\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: {\n      ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: chartClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"names":["React","Chartist","ChartistTooltip","SalesValueChart","data","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","createElement","type","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SalesValueChartphone","CircleChart","props","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset"],"sources":["C:/test/dash2-v1.0.1 (1)/src/components/Charts.js"],"sourcesContent":["\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\n\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\n  );\n};\n\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  }\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\n  const data = { labels, series };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}