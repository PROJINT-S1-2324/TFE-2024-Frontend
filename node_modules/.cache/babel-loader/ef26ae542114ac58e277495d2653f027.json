{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = __importStar(require(\"react\"));\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = typeof window !== 'undefined' && 'navigator' in window && /Win/i.test(navigator.platform);\nvar isMacLike = typeof window !== 'undefined' && 'navigator' in window && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText = /* CSS */\"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\nvar Editor = /** @class */function (_super) {\n  __extends(Editor, _super);\n  function Editor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      capture: true\n    };\n    _this._recordCurrentState = function () {\n      var input = _this._input;\n      if (!input) return;\n      // Save current state of the input\n      var value = input.value,\n        selectionStart = input.selectionStart,\n        selectionEnd = input.selectionEnd;\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    };\n    _this._getLines = function (text, position) {\n      return text.substring(0, position).split('\\n');\n    };\n    _this._recordChange = function (record, overwrite) {\n      var _a, _b, _c;\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n      var _d = _this._history,\n        stack = _d.stack,\n        offset = _d.offset;\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        _this._history.stack = stack.slice(0, offset + 1);\n        // Limit the number of operations to 100\n        var count = _this._history.stack.length;\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          _this._history.stack = stack.slice(extras, count);\n          _this._history.offset = Math.max(_this._history.offset - extras, 0);\n        }\n      }\n      var timestamp = Date.now();\n      if (overwrite) {\n        var last = _this._history.stack[_this._history.offset];\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i;\n          // Get the previous line\n          var previous = (_a = _this._getLines(last.value, last.selectionStart).pop()) === null || _a === void 0 ? void 0 : _a.match(re);\n          // Get the current line\n          var current = (_b = _this._getLines(record.value, record.selectionStart).pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n          if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            _this._history.stack[_this._history.offset] = __assign(__assign({}, record), {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      }\n      // Add the new operation to the stack\n      _this._history.stack.push(__assign(__assign({}, record), {\n        timestamp: timestamp\n      }));\n      _this._history.offset++;\n    };\n    _this._updateInput = function (record) {\n      var input = _this._input;\n      if (!input) return;\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n      _this.props.onValueChange(record.value);\n    };\n    _this._applyEdits = function (record) {\n      // Save last selection state\n      var input = _this._input;\n      var last = _this._history.stack[_this._history.offset];\n      if (last && input) {\n        _this._history.stack[_this._history.offset] = __assign(__assign({}, last), {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      }\n      // Save the changes\n      _this._recordChange(record);\n      _this._updateInput(record);\n    };\n    _this._undoEdit = function () {\n      var _a = _this._history,\n        stack = _a.stack,\n        offset = _a.offset;\n      // Get the previous edit\n      var record = stack[offset - 1];\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.max(offset - 1, 0);\n      }\n    };\n    _this._redoEdit = function () {\n      var _a = _this._history,\n        stack = _a.stack,\n        offset = _a.offset;\n      // Get the next edit\n      var record = stack[offset + 1];\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n        _this._history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    };\n    _this._handleKeyDown = function (e) {\n      var _a = _this.props,\n        tabSize = _a.tabSize,\n        insertSpaces = _a.insertSpaces,\n        ignoreTabKey = _a.ignoreTabKey,\n        onKeyDown = _a.onKeyDown;\n      if (onKeyDown) {\n        onKeyDown(e);\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.currentTarget.blur();\n      }\n      var _b = e.currentTarget,\n        value = _b.value,\n        selectionStart = _b.selectionStart,\n        selectionEnd = _b.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n        // Prevent focus change\n        e.preventDefault();\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine_1 = linesBeforeCaret.length - 1;\n          var endLine_1 = _this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine_1 && i <= endLine_1 && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n            return line;\n          }).join('\\n');\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine_1];\n            _this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter)) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n          var startLine_2 = linesBeforeCaret.length - 1;\n          var endLine_2 = _this._getLines(value, selectionEnd).length - 1;\n          var startLineText = linesBeforeCaret[startLine_2];\n          _this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= startLine_2 && i <= endLine_2) {\n                return tabCharacter + line;\n              }\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: startLineText && /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n          _this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n          var updatedSelection = selectionStart - tabCharacter.length;\n          _this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = _this._getLines(value, selectionStart).pop();\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n          if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n            e.preventDefault();\n            // Preserve indentation on inserting a new line\n            var indent = '\\n' + matches[0];\n            var updatedSelection = selectionStart + indent.length;\n            _this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: updatedSelection,\n              selectionEnd: updatedSelection\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars = void 0;\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n          _this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ?\n      // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z :\n      // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n        _this._undoEdit();\n      } else if ((isMacLike ?\n      // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ?\n      // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y :\n      // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n        _this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n        // Toggle capturing tab key so users can focus away\n        _this.setState(function (state) {\n          return {\n            capture: !state.capture\n          };\n        });\n      }\n    };\n    _this._handleChange = function (e) {\n      var _a = e.currentTarget,\n        value = _a.value,\n        selectionStart = _a.selectionStart,\n        selectionEnd = _a.selectionEnd;\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n      _this.props.onValueChange(value);\n    };\n    _this._history = {\n      stack: [],\n      offset: -1\n    };\n    _this._input = null;\n    return _this;\n  }\n  Editor.prototype.componentDidMount = function () {\n    this._recordCurrentState();\n  };\n  Object.defineProperty(Editor.prototype, \"session\", {\n    get: function () {\n      return {\n        history: this._history\n      };\n    },\n    set: function (session) {\n      this._history = session.history;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Editor.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      value = _a.value,\n      style = _a.style,\n      padding = _a.padding,\n      highlight = _a.highlight,\n      textareaId = _a.textareaId,\n      textareaClassName = _a.textareaClassName,\n      autoFocus = _a.autoFocus,\n      disabled = _a.disabled,\n      form = _a.form,\n      maxLength = _a.maxLength,\n      minLength = _a.minLength,\n      name = _a.name,\n      placeholder = _a.placeholder,\n      readOnly = _a.readOnly,\n      required = _a.required,\n      onClick = _a.onClick,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      onKeyUp = _a.onKeyUp,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onKeyDown = _a.onKeyDown,\n      onValueChange = _a.onValueChange,\n      tabSize = _a.tabSize,\n      insertSpaces = _a.insertSpaces,\n      ignoreTabKey = _a.ignoreTabKey,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      preClassName = _a.preClassName,\n      rest = __rest(_a, [\"value\", \"style\", \"padding\", \"highlight\", \"textareaId\", \"textareaClassName\", \"autoFocus\", \"disabled\", \"form\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"required\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onValueChange\", \"tabSize\", \"insertSpaces\", \"ignoreTabKey\", \"preClassName\"]);\n    var contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding\n    };\n    var highlighted = highlight(value);\n    return React.createElement(\"div\", __assign({}, rest, {\n      style: __assign(__assign({}, styles.container), style)\n    }), React.createElement(\"textarea\", {\n      ref: function (c) {\n        return _this._input = c;\n      },\n      style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle),\n      className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''),\n      id: textareaId,\n      value: value,\n      onChange: this._handleChange,\n      onKeyDown: this._handleKeyDown,\n      onClick: onClick,\n      onKeyUp: onKeyUp,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      disabled: disabled,\n      form: form,\n      maxLength: maxLength,\n      minLength: minLength,\n      name: name,\n      placeholder: placeholder,\n      readOnly: readOnly,\n      required: required,\n      autoFocus: autoFocus,\n      autoCapitalize: \"off\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      spellCheck: false,\n      \"data-gramm\": false\n    }), React.createElement(\"pre\", __assign({\n      className: preClassName,\n      \"aria-hidden\": \"true\",\n      style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle)\n    }, typeof highlighted === 'string' ? {\n      dangerouslySetInnerHTML: {\n        __html: highlighted + '<br />'\n      }\n    } : {\n      children: highlighted\n    })), React.createElement(\"style\", {\n      type: \"text/css\",\n      dangerouslySetInnerHTML: {\n        __html: cssText\n      }\n    }));\n  };\n  Editor.defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0\n  };\n  return Editor;\n}(React.Component);\nexports.default = Editor;\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden'\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none'\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word'\n  }\n};","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = typeof window !== 'undefined' &&\n    'navigator' in window &&\n    /Win/i.test(navigator.platform);\nvar isMacLike = typeof window !== 'undefined' &&\n    'navigator' in window &&\n    /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText = /* CSS */ \"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            capture: true,\n        };\n        _this._recordCurrentState = function () {\n            var input = _this._input;\n            if (!input)\n                return;\n            // Save current state of the input\n            var value = input.value, selectionStart = input.selectionStart, selectionEnd = input.selectionEnd;\n            _this._recordChange({\n                value: value,\n                selectionStart: selectionStart,\n                selectionEnd: selectionEnd,\n            });\n        };\n        _this._getLines = function (text, position) {\n            return text.substring(0, position).split('\\n');\n        };\n        _this._recordChange = function (record, overwrite) {\n            var _a, _b, _c;\n            if (overwrite === void 0) { overwrite = false; }\n            var _d = _this._history, stack = _d.stack, offset = _d.offset;\n            if (stack.length && offset > -1) {\n                // When something updates, drop the redo operations\n                _this._history.stack = stack.slice(0, offset + 1);\n                // Limit the number of operations to 100\n                var count = _this._history.stack.length;\n                if (count > HISTORY_LIMIT) {\n                    var extras = count - HISTORY_LIMIT;\n                    _this._history.stack = stack.slice(extras, count);\n                    _this._history.offset = Math.max(_this._history.offset - extras, 0);\n                }\n            }\n            var timestamp = Date.now();\n            if (overwrite) {\n                var last = _this._history.stack[_this._history.offset];\n                if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n                    // A previous entry exists and was in short interval\n                    // Match the last word in the line\n                    var re = /[^a-z0-9]([a-z0-9]+)$/i;\n                    // Get the previous line\n                    var previous = (_a = _this._getLines(last.value, last.selectionStart)\n                        .pop()) === null || _a === void 0 ? void 0 : _a.match(re);\n                    // Get the current line\n                    var current = (_b = _this._getLines(record.value, record.selectionStart)\n                        .pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n                    if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n                        // The last word of the previous line and current line match\n                        // Overwrite previous entry so that undo will remove whole word\n                        _this._history.stack[_this._history.offset] = __assign(__assign({}, record), { timestamp: timestamp });\n                        return;\n                    }\n                }\n            }\n            // Add the new operation to the stack\n            _this._history.stack.push(__assign(__assign({}, record), { timestamp: timestamp }));\n            _this._history.offset++;\n        };\n        _this._updateInput = function (record) {\n            var input = _this._input;\n            if (!input)\n                return;\n            // Update values and selection state\n            input.value = record.value;\n            input.selectionStart = record.selectionStart;\n            input.selectionEnd = record.selectionEnd;\n            _this.props.onValueChange(record.value);\n        };\n        _this._applyEdits = function (record) {\n            // Save last selection state\n            var input = _this._input;\n            var last = _this._history.stack[_this._history.offset];\n            if (last && input) {\n                _this._history.stack[_this._history.offset] = __assign(__assign({}, last), { selectionStart: input.selectionStart, selectionEnd: input.selectionEnd });\n            }\n            // Save the changes\n            _this._recordChange(record);\n            _this._updateInput(record);\n        };\n        _this._undoEdit = function () {\n            var _a = _this._history, stack = _a.stack, offset = _a.offset;\n            // Get the previous edit\n            var record = stack[offset - 1];\n            if (record) {\n                // Apply the changes and update the offset\n                _this._updateInput(record);\n                _this._history.offset = Math.max(offset - 1, 0);\n            }\n        };\n        _this._redoEdit = function () {\n            var _a = _this._history, stack = _a.stack, offset = _a.offset;\n            // Get the next edit\n            var record = stack[offset + 1];\n            if (record) {\n                // Apply the changes and update the offset\n                _this._updateInput(record);\n                _this._history.offset = Math.min(offset + 1, stack.length - 1);\n            }\n        };\n        _this._handleKeyDown = function (e) {\n            var _a = _this.props, tabSize = _a.tabSize, insertSpaces = _a.insertSpaces, ignoreTabKey = _a.ignoreTabKey, onKeyDown = _a.onKeyDown;\n            if (onKeyDown) {\n                onKeyDown(e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n            }\n            if (e.keyCode === KEYCODE_ESCAPE) {\n                e.currentTarget.blur();\n            }\n            var _b = e.currentTarget, value = _b.value, selectionStart = _b.selectionStart, selectionEnd = _b.selectionEnd;\n            var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n            if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n                // Prevent focus change\n                e.preventDefault();\n                if (e.shiftKey) {\n                    // Unindent selected lines\n                    var linesBeforeCaret = _this._getLines(value, selectionStart);\n                    var startLine_1 = linesBeforeCaret.length - 1;\n                    var endLine_1 = _this._getLines(value, selectionEnd).length - 1;\n                    var nextValue = value\n                        .split('\\n')\n                        .map(function (line, i) {\n                        if (i >= startLine_1 &&\n                            i <= endLine_1 &&\n                            line.startsWith(tabCharacter)) {\n                            return line.substring(tabCharacter.length);\n                        }\n                        return line;\n                    })\n                        .join('\\n');\n                    if (value !== nextValue) {\n                        var startLineText = linesBeforeCaret[startLine_1];\n                        _this._applyEdits({\n                            value: nextValue,\n                            // Move the start cursor if first line in selection was modified\n                            // It was modified only if it started with a tab\n                            selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter))\n                                ? selectionStart - tabCharacter.length\n                                : selectionStart,\n                            // Move the end cursor by total number of characters removed\n                            selectionEnd: selectionEnd - (value.length - nextValue.length),\n                        });\n                    }\n                }\n                else if (selectionStart !== selectionEnd) {\n                    // Indent selected lines\n                    var linesBeforeCaret = _this._getLines(value, selectionStart);\n                    var startLine_2 = linesBeforeCaret.length - 1;\n                    var endLine_2 = _this._getLines(value, selectionEnd).length - 1;\n                    var startLineText = linesBeforeCaret[startLine_2];\n                    _this._applyEdits({\n                        value: value\n                            .split('\\n')\n                            .map(function (line, i) {\n                            if (i >= startLine_2 && i <= endLine_2) {\n                                return tabCharacter + line;\n                            }\n                            return line;\n                        })\n                            .join('\\n'),\n                        // Move the start cursor by number of characters added in first line of selection\n                        // Don't move it if it there was no text before cursor\n                        selectionStart: startLineText && /\\S/.test(startLineText)\n                            ? selectionStart + tabCharacter.length\n                            : selectionStart,\n                        // Move the end cursor by total number of characters added\n                        selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1),\n                    });\n                }\n                else {\n                    var updatedSelection = selectionStart + tabCharacter.length;\n                    _this._applyEdits({\n                        // Insert tab character at caret\n                        value: value.substring(0, selectionStart) +\n                            tabCharacter +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: updatedSelection,\n                        selectionEnd: updatedSelection,\n                    });\n                }\n            }\n            else if (e.keyCode === KEYCODE_BACKSPACE) {\n                var hasSelection = selectionStart !== selectionEnd;\n                var textBeforeCaret = value.substring(0, selectionStart);\n                if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n                    // Prevent default delete behaviour\n                    e.preventDefault();\n                    var updatedSelection = selectionStart - tabCharacter.length;\n                    _this._applyEdits({\n                        // Remove tab character at caret\n                        value: value.substring(0, selectionStart - tabCharacter.length) +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: updatedSelection,\n                        selectionEnd: updatedSelection,\n                    });\n                }\n            }\n            else if (e.keyCode === KEYCODE_ENTER) {\n                // Ignore selections\n                if (selectionStart === selectionEnd) {\n                    // Get the current line\n                    var line = _this._getLines(value, selectionStart).pop();\n                    var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n                    if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n                        e.preventDefault();\n                        // Preserve indentation on inserting a new line\n                        var indent = '\\n' + matches[0];\n                        var updatedSelection = selectionStart + indent.length;\n                        _this._applyEdits({\n                            // Insert indentation character at caret\n                            value: value.substring(0, selectionStart) +\n                                indent +\n                                value.substring(selectionEnd),\n                            // Update caret position\n                            selectionStart: updatedSelection,\n                            selectionEnd: updatedSelection,\n                        });\n                    }\n                }\n            }\n            else if (e.keyCode === KEYCODE_PARENS ||\n                e.keyCode === KEYCODE_BRACKETS ||\n                e.keyCode === KEYCODE_QUOTE ||\n                e.keyCode === KEYCODE_BACK_QUOTE) {\n                var chars = void 0;\n                if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n                    chars = ['(', ')'];\n                }\n                else if (e.keyCode === KEYCODE_BRACKETS) {\n                    if (e.shiftKey) {\n                        chars = ['{', '}'];\n                    }\n                    else {\n                        chars = ['[', ']'];\n                    }\n                }\n                else if (e.keyCode === KEYCODE_QUOTE) {\n                    if (e.shiftKey) {\n                        chars = ['\"', '\"'];\n                    }\n                    else {\n                        chars = [\"'\", \"'\"];\n                    }\n                }\n                else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n                    chars = ['`', '`'];\n                }\n                // If text is selected, wrap them in the characters\n                if (selectionStart !== selectionEnd && chars) {\n                    e.preventDefault();\n                    _this._applyEdits({\n                        value: value.substring(0, selectionStart) +\n                            chars[0] +\n                            value.substring(selectionStart, selectionEnd) +\n                            chars[1] +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: selectionStart,\n                        selectionEnd: selectionEnd + 2,\n                    });\n                }\n            }\n            else if ((isMacLike\n                ? // Trigger undo with ⌘+Z on Mac\n                    e.metaKey && e.keyCode === KEYCODE_Z\n                : // Trigger undo with Ctrl+Z on other platforms\n                    e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n                !e.shiftKey &&\n                !e.altKey) {\n                e.preventDefault();\n                _this._undoEdit();\n            }\n            else if ((isMacLike\n                ? // Trigger redo with ⌘+Shift+Z on Mac\n                    e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n                : isWindows\n                    ? // Trigger redo with Ctrl+Y on Windows\n                        e.ctrlKey && e.keyCode === KEYCODE_Y\n                    : // Trigger redo with Ctrl+Shift+Z on other platforms\n                        e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n                !e.altKey) {\n                e.preventDefault();\n                _this._redoEdit();\n            }\n            else if (e.keyCode === KEYCODE_M &&\n                e.ctrlKey &&\n                (isMacLike ? e.shiftKey : true)) {\n                e.preventDefault();\n                // Toggle capturing tab key so users can focus away\n                _this.setState(function (state) { return ({\n                    capture: !state.capture,\n                }); });\n            }\n        };\n        _this._handleChange = function (e) {\n            var _a = e.currentTarget, value = _a.value, selectionStart = _a.selectionStart, selectionEnd = _a.selectionEnd;\n            _this._recordChange({\n                value: value,\n                selectionStart: selectionStart,\n                selectionEnd: selectionEnd,\n            }, true);\n            _this.props.onValueChange(value);\n        };\n        _this._history = {\n            stack: [],\n            offset: -1,\n        };\n        _this._input = null;\n        return _this;\n    }\n    Editor.prototype.componentDidMount = function () {\n        this._recordCurrentState();\n    };\n    Object.defineProperty(Editor.prototype, \"session\", {\n        get: function () {\n            return {\n                history: this._history,\n            };\n        },\n        set: function (session) {\n            this._history = session.history;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, value = _a.value, style = _a.style, padding = _a.padding, highlight = _a.highlight, textareaId = _a.textareaId, textareaClassName = _a.textareaClassName, autoFocus = _a.autoFocus, disabled = _a.disabled, form = _a.form, maxLength = _a.maxLength, minLength = _a.minLength, name = _a.name, placeholder = _a.placeholder, readOnly = _a.readOnly, required = _a.required, onClick = _a.onClick, onFocus = _a.onFocus, onBlur = _a.onBlur, onKeyUp = _a.onKeyUp, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onKeyDown = _a.onKeyDown, onValueChange = _a.onValueChange, tabSize = _a.tabSize, insertSpaces = _a.insertSpaces, ignoreTabKey = _a.ignoreTabKey, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        preClassName = _a.preClassName, rest = __rest(_a, [\"value\", \"style\", \"padding\", \"highlight\", \"textareaId\", \"textareaClassName\", \"autoFocus\", \"disabled\", \"form\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"required\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onValueChange\", \"tabSize\", \"insertSpaces\", \"ignoreTabKey\", \"preClassName\"]);\n        var contentStyle = {\n            paddingTop: padding,\n            paddingRight: padding,\n            paddingBottom: padding,\n            paddingLeft: padding,\n        };\n        var highlighted = highlight(value);\n        return (React.createElement(\"div\", __assign({}, rest, { style: __assign(__assign({}, styles.container), style) }),\n            React.createElement(\"textarea\", { ref: function (c) { return (_this._input = c); }, style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle), className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''), id: textareaId, value: value, onChange: this._handleChange, onKeyDown: this._handleKeyDown, onClick: onClick, onKeyUp: onKeyUp, onFocus: onFocus, onBlur: onBlur, disabled: disabled, form: form, maxLength: maxLength, minLength: minLength, name: name, placeholder: placeholder, readOnly: readOnly, required: required, autoFocus: autoFocus, autoCapitalize: \"off\", autoComplete: \"off\", autoCorrect: \"off\", spellCheck: false, \"data-gramm\": false }),\n            React.createElement(\"pre\", __assign({ className: preClassName, \"aria-hidden\": \"true\", style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle) }, (typeof highlighted === 'string'\n                ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n                : { children: highlighted }))),\n            React.createElement(\"style\", { type: \"text/css\", dangerouslySetInnerHTML: { __html: cssText } })));\n    };\n    Editor.defaultProps = {\n        tabSize: 2,\n        insertSpaces: true,\n        ignoreTabKey: false,\n        padding: 0,\n    };\n    return Editor;\n}(React.Component));\nexports.default = Editor;\nvar styles = {\n    container: {\n        position: 'relative',\n        textAlign: 'left',\n        boxSizing: 'border-box',\n        padding: 0,\n        overflow: 'hidden',\n    },\n    textarea: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        resize: 'none',\n        color: 'inherit',\n        overflow: 'hidden',\n        MozOsxFontSmoothing: 'grayscale',\n        WebkitFontSmoothing: 'antialiased',\n        WebkitTextFillColor: 'transparent',\n    },\n    highlight: {\n        position: 'relative',\n        pointerEvents: 'none',\n    },\n    editor: {\n        margin: 0,\n        border: 0,\n        background: 'none',\n        boxSizing: 'inherit',\n        display: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        fontStyle: 'inherit',\n        fontVariantLigatures: 'inherit',\n        fontWeight: 'inherit',\n        letterSpacing: 'inherit',\n        lineHeight: 'inherit',\n        tabSize: 'inherit',\n        textIndent: 'inherit',\n        textRendering: 'inherit',\n        textTransform: 'inherit',\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'keep-all',\n        overflowWrap: 'break-word',\n    },\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}