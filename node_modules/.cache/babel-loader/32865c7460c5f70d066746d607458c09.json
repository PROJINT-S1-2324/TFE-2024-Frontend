{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\dash2-v1.0.1 (1)\\\\src\\\\components\\\\Code.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nexport default (props => {\n  const {\n    code = \"\",\n    language = \"jsx\"\n  } = props;\n  const [copied, setCopied] = useState(false);\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  const CodeStyling = ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => /*#__PURE__*/React.createElement(Card, {\n    className: \"position-relative pe-8 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, tokens.map((line, i) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getLineProps({\n    line,\n    key: i\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), line.map((token, key) => /*#__PURE__*/React.createElement(\"span\", Object.assign({}, getTokenProps({\n    token,\n    key\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  })))))), copied ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success copy-code-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, \"Copied\") : null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: ['hover', 'focus'],\n    placement: \"top\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }\n    }, \"Copy to clipboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: code,\n    onCopy: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"primary\",\n    className: \"copy-code-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Copy\")))));\n  return /*#__PURE__*/React.createElement(Highlight, {\n    Prism: Prism,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, CodeStyling);\n});","map":{"version":3,"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","line","i","Object","assign","key","token","trigger","placement","overlay","text","onCopy","size","variant","theme"],"sources":["C:/test/dash2-v1.0.1 (1)/src/components/Code.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\n\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\n\nexport default (props) => {\n  const { code = \"\", language = \"jsx\" } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\n    <Card className=\"position-relative pe-8 mb-2\">\n      <Card.Body>\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n            </div>\n          ))}\n        </pre>\n\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\n\n        <OverlayTrigger\n          trigger={['hover', 'focus']}\n          placement=\"top\"\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\n        >\n          <CopyToClipboard text={code} onCopy={handleCopy}>\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\n          </CopyToClipboard>\n        </OverlayTrigger>\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\n      {CodeStyling}\n    </Highlight>\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}